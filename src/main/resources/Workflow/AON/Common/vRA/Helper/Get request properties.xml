<?xml version="1.0" encoding="UTF-8"?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item2" object-name="workflow:name=generic" id="3dbe5ac8-de7e-4645-8f65-d5c99abe9059" version="1.0.3" api-version="6.0.0" allowed-operations="vef" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Get request properties]]></display-name>
  <position y="9.545454545454543" x="45.0"></position>
  <input>
    <param name="payload" type="Properties">
      <description><![CDATA[Payload properties passed in from EBS]]></description>
    </param>
  </input>
  <output>
    <param name="requestProperties" type="Properties"></param>
    <param name="requestId" type="string"></param>
    <param name="requestNumber" type="string"></param>
  </output>
  <attrib name="cafeHost" type="vCACCAFE:VCACHost" read-only="false" conf-id="f2986103-1230-46f7-8dc8-1a3b7682eb80" conf-key="cafeHost">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="requestIdInternal" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="resourceActionRequest" type="vCACCAFE:ResourceActionRequest" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="catalogItemRequest" type="vCACCAFE:CatalogItemRequest" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
  </attrib>
  <attrib name="componentName" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="9.045454545454543" x="604.5"></position>
  </workflow-item>
  <workflow-item name="item1" out-name="item5" type="task">
    <display-name><![CDATA[find request]]></display-name>
    <script encoded="false"><![CDATA[var logger = System.getModule("com.vmware.pscoe.library.logging").getLogger(workflow.currentWorkflow.name);

var catalogItemRequest = null;
var resourceActionRequest = null;

try {
	catalogItemRequest = vCACCAFEEntitiesFinder.getCatalogItemRequest(cafeHost , requestId);
} catch (e) {
	logger.debug ("Request with id '" + requestId + "' is not a catalog item request.");
}
if (!catalogItemRequest) {
	try {
		resourceActionRequest = vCACCAFEEntitiesFinder.getResourceActionRequest(cafeHost , requestId);
	} catch (e) {
		logger.debug ("Request with id '" + requestId + "' is not a resource action request.");
	}
}

if (!catalogItemRequest && !resourceActionRequest) {
	throw "No request found for id " + requestId;
}]]></script>
    <in-binding>
      <bind name="cafeHost" type="vCACCAFE:VCACHost" export-name="cafeHost"></bind>
      <bind name="requestId" type="string" export-name="requestIdInternal"></bind>
    </in-binding>
    <out-binding>
      <bind name="resourceActionRequest" type="vCACCAFE:ResourceActionRequest" export-name="resourceActionRequest"></bind>
      <bind name="catalogItemRequest" type="vCACCAFE:CatalogItemRequest" export-name="catalogItemRequest"></bind>
    </out-binding>
    <position y="19.045454545454543" x="284.5"></position>
  </workflow-item>
  <workflow-item name="item2" out-name="item1" type="task">
    <display-name><![CDATA[get request info]]></display-name>
    <script encoded="false"><![CDATA[var logger = System.getModule("com.vmware.pscoe.library.logging").getLogger(workflow.currentWorkflow.name);

logProp(payload);

var reqAndCompId = extractRequestIdAndCompName(payload.sourceInfo.externalInstanceId);
requestId = reqAndCompId.reqId;
requestIdInternal = requestId;
logger.debug("requestId: " + requestId);

requestNumber = payload.requestInfo.requestRef;
logger.debug("requestNumber: " + requestNumber);

componentName = reqAndCompId.compName;
logger.debug("componentName: " + componentName);

// ---- functions ----

// ----- get requestId from externalInstanceId (in some cases (resource action), the machine ID is appended) -----
function extractRequestIdAndCompName (reqAndVmId) {

	match = reqAndVmId.match(/([0-9a-zA-Z\-]+)(?:~(.*))?$/, "");
	var reqIdAndComp = {};
	
	if (match && match.length > 2) {
		reqIdAndComp.reqId = match[1];
		reqIdAndComp.compName = match[2];
	}
	
	return reqIdAndComp;
}

function logProp(prop) {
	for each (var key in prop.keys) {
		if (prop.get(key) instanceof Properties) {
			logger.debug ("Parent Key: " + key);
			logProp (prop.get(key));
		} else {
			logger.debug (key + " : " + prop.get(key));
		}
	}
}]]></script>
    <in-binding>
      <bind name="payload" type="Properties" export-name="payload"></bind>
    </in-binding>
    <out-binding>
      <bind name="requestNumber" type="string" export-name="requestNumber"></bind>
      <bind name="componentName" type="string" export-name="componentName"></bind>
      <bind name="requestId" type="string" export-name="requestId"></bind>
      <bind name="requestIdInternal" type="string" export-name="requestIdInternal"></bind>
    </out-binding>
    <position y="19.045454545454543" x="144.5"></position>
  </workflow-item>
  <workflow-item name="item5" out-name="item0" type="task">
    <display-name><![CDATA[get request properties]]></display-name>
    <script encoded="false"><![CDATA[if (catalogItemRequest) {
	requestProperties = System.getModule("com.vmware.pscoe.aon.vra").getCatalogItemRequestProperties(catalogItemRequest, cafeHost, componentNameInternal) ;
} else if (resourceActionRequest) {
	requestProperties = System.getModule("com.vmware.pscoe.aon.vra").getResourceActionRequestProperties(resourceActionRequest, cafeHost)
} else {
	throw "No request defined to get properties from.";
}]]></script>
    <in-binding>
      <bind name="resourceActionRequest" type="vCACCAFE:ResourceActionRequest" export-name="resourceActionRequest"></bind>
      <bind name="catalogItemRequest" type="vCACCAFE:CatalogItemRequest" export-name="catalogItemRequest"></bind>
      <bind name="componentNameInternal" type="string" export-name="componentName"></bind>
      <bind name="cafeHost" type="vCACCAFE:VCACHost" export-name="cafeHost"></bind>
    </in-binding>
    <out-binding>
      <bind name="requestProperties" type="Properties" export-name="requestProperties"></bind>
      <bind name="requestId" type="string" export-name="requestId"></bind>
    </out-binding>
    <position y="19.045454545454543" x="424.5"></position>
  </workflow-item>
  <presentation>
    <p-param name="payload">
      <desc><![CDATA[Payload properties passed in from EBS]]></desc>
    </p-param>
  </presentation>
</workflow>